<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="flagpicturebox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="minePIcturebox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACkAAAAoCAYAAABjPNNTAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAAlFJREFUWEftl91OE0EUgOcJeACfARAQ/KHSVkAuvPOGAIKGgDEqEYMEQxCFiuWC
        Cx7A8AS04RGP52Nputkc6MzukKzJXnxp2rAz3545P4M7vZqWsnMt2VYOLmuyXzKOurW+JIIPzmdl6Gyu
        VLy6qPclseZHdzpfKub+NirJKFSSsagkYxFXsq3P/p4Vd/xC3FFT0c+W8kd/bxt/70kcyZ7cLxXbey7u
        6zNxX54k7OjiB/VEHFnr+QEUl2Tjw4a4z4/FvX0o7s2oMiJu5Qa+ryrvJ8Tt6kYn+jLWOndQTLKlG+7W
        VOCRuDUVWR4Wt3QLiK+PJy/zU18qIKr5JdkEwU2NEBGzxLLwEkS1J0qaWGtnyCfJ4hwxEfQVTEMK7Gje
        kqfW+hnySVIkRIMjtiR82NAT+K5FZq2fIVySKFLFFMldOTiIZT2B7adaSIODEi5JFGkzHJm1eQgfpzQ3
        9YWtfVKES5JH9EGq1do4BHJ6f8beJ0W4JJOEJp2nYLLQGTzyMoekRrL0ksxiRl2MnPwwmYxMa58U4ZI0
        cRamKVsbh7ClbcyjV4ZLcpthYWZxkeKhhX3TjT2mTrgkXI9EfYhZnKdX0iM/afv5MfioIZ8kcJth6oQe
        O4LvxpLW43nJyC8JXBIQ9S2iniAVzVCw1jQoJkkkEOWywCxGwpIDcpAjJoIIBtzUi0kCiU8hER1mMaOO
        SUIPBNoMVUyRkIOeR5ymuGQaLgvMYqKFNPT+dfC8O1rElbwnKslYVJKxqCRj8f9Jtq5qsth5Ka87C6Vi
        q9tUyWn5Bz5mxg7cRNKgAAAAAElFTkSuQmCC
</value>
  </data>
</root>